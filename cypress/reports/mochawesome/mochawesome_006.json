{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2024-10-23T20:26:55.051Z",
    "end": "2024-10-23T20:27:16.514Z",
    "duration": 21463,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "4cb70eb5-cb64-41d1-94b4-aedd018b1de5",
      "title": "",
      "fullFile": "cypress\\tests\\Signin.spec.js",
      "file": "cypress\\tests\\Signin.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b73d6595-864b-42d3-8b54-3761a7827310",
          "title": "User sign in process",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify user is able to sign in successfully",
              "fullTitle": "User sign in process Verify user is able to sign in successfully",
              "timedOut": null,
              "duration": 21396,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const email = data.validEmail; // Get valid email from test data\nconst password = data.password; // Get valid password from test data\nsignIn.signIn(email, password); // Perform sign-in action\nsignIn.assertSuccess(); // Assert successful sign-in",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://app.risevest.com/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ETIMEDOUT 104.21.11.119:443\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User sign in process`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttps://app.risevest.com/\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ETIMEDOUT 104.21.11.119:443\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `User sign in process`\n    at <unknown> (https://app.risevest.com/__cypress/runner/cypress_runner.js:131650:74)\n    at visitFailedByErr (https://app.risevest.com/__cypress/runner/cypress_runner.js:131049:12)\n    at <unknown> (https://app.risevest.com/__cypress/runner/cypress_runner.js:131649:11)\n    at tryCatcher (https://app.risevest.com/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://app.risevest.com/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://app.risevest.com/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://app.risevest.com/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://app.risevest.com/__cypress/runner/cypress_runner.js:1697:18)\n    at _drainQueueStep (https://app.risevest.com/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://app.risevest.com/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://app.risevest.com/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://app.risevest.com/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://risevest/./cypress/tests/Signin.spec.js:13:11)\n\nFrom Node.js Internals:\n  Error: connect ETIMEDOUT 104.21.11.119:443\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1495:16)",
                "diff": null
              },
              "uuid": "176d2852-6959-415e-9752-6eb9fd442e5b",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify user is unable to sign in with a wrong email address",
              "fullTitle": "User sign in process Verify user is unable to sign in with a wrong email address",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.wrongEmail; // Get wrong email from test data\nconst password = data.password; // Get valid password from test data\nsignIn.signIn(email, password); // Perform sign-in action\nsignIn.assertFailure(); // Assert failure due to wrong email",
              "err": {},
              "uuid": "0f680d9d-2df0-4973-aa4c-3f7058e79144",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify user is unable to sign in with an invalid email address",
              "fullTitle": "User sign in process Verify user is unable to sign in with an invalid email address",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.invalidEmail; // Get invalid email from test data\nconst password = data.password; // Get valid password from test data\nsignIn.signIn(email, password); // Perform sign-in action\nsignIn.assertInvalidEmail(); // Assert failure due to invalid email format",
              "err": {},
              "uuid": "90dfc2bb-2187-4773-9613-9212460e9051",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify user is unable to sign in with invalid password",
              "fullTitle": "User sign in process Verify user is unable to sign in with invalid password",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.validEmail; // Get valid email from test data\nconst password = data.invalidPassword; // Get invalid password from test data\nsignIn.signIn(email, password); // Perform sign-in action\nsignIn.assertFailure(); // Assert failure due to invalid password",
              "err": {},
              "uuid": "f6a67899-6a85-41ec-af21-dbdc2800c146",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify user is unable to sign in with an empty password field",
              "fullTitle": "User sign in process Verify user is unable to sign in with an empty password field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.validEmail; // Get valid email from test data\nconst password = data.invalidPassword; // Get any password to clear later\nsignIn.signInEmptyPassword(email, password); // Perform sign-in with empty password\nsignIn.assertEmptyPassword(); // Assert failure due to empty password",
              "err": {},
              "uuid": "9467ce76-d98e-496a-ac1c-ed5ef4e288ec",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify user is unable to sign in with an empty email field",
              "fullTitle": "User sign in process Verify user is unable to sign in with an empty email field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.validEmail; // Get any email to clear later\nconst password = data.password; // Get valid password from test data\nsignIn.signInEmptyEmail(email, password); // Perform sign-in with empty email\nsignIn.assertEmptyEmail(); // Assert failure due to empty email",
              "err": {},
              "uuid": "0e7ed659-c7ce-448b-a6a3-e3acbb85b919",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Verify user is unable to sign in with an empty email and password field",
              "fullTitle": "User sign in process Verify user is unable to sign in with an empty email and password field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const email = data.validEmail; // Get any email to clear later\nconst password = data.password; // Get valid password from test data\nsignIn.signInEmptyEmailAndPassword(email, password); // Perform sign-in with both fields empty\nsignIn.assertEmptyEmail(); // Assert failure due to empty email\nsignIn.assertEmptyPassword(); // Assert failure due to empty password",
              "err": {},
              "uuid": "eb4e8b7a-f6ba-4029-8275-4e04835f1427",
              "parentUUID": "b73d6595-864b-42d3-8b54-3761a7827310",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "176d2852-6959-415e-9752-6eb9fd442e5b"
          ],
          "pending": [],
          "skipped": [
            "0f680d9d-2df0-4973-aa4c-3f7058e79144",
            "90dfc2bb-2187-4773-9613-9212460e9051",
            "f6a67899-6a85-41ec-af21-dbdc2800c146",
            "9467ce76-d98e-496a-ac1c-ed5ef4e288ec",
            "0e7ed659-c7ce-448b-a6a3-e3acbb85b919",
            "eb4e8b7a-f6ba-4029-8275-4e04835f1427"
          ],
          "duration": 21396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mochawesome",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}